* {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    line-height: 1.5;
    background-color: #edf2f7;
}

code {
    display: block;
    margin-bottom: 10px;
    text-align: center;
    font-weight: 700;
    font-size: 20px;
}

img {
    display: block;
    max-width: 100%;
    height: auto;
}

.card {
    display: flex;
    width: 640px;
    margin-bottom: 20px;
    margin-left: auto;
    margin-right: auto;
    padding: 10px;
    background-color: #fff;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    border-radius: 4px;
}

.card>.content {
    margin-left: 15px;
}

.card.flex-start-aligned {
    align-items: flex-start;
}

.card2 {
    display: flex;
    flex-direction: column;
    flex-basis: 320px;
    margin: 8px;
    padding: 10px;
    background-color: #fff;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    border-radius: 4px;
}

.card2>.content2 {
    flex-grow: 1;

    margin-bottom: 10px;
    padding: 10px;
    border: 2px dashed tomato;
    border-radius: 4px;
}

.card2>.meta2 {
    padding: 10px;
    text-align: center;
    background-color: teal;
    color: white;
    border-radius: 4px;
}

.container2 {
    display: flex;
    justify-content: center;
    margin: 0px;
}

.container {
    max-width: 1200px;
    padding: 5px;
    margin-left: auto;
    margin-right: auto;
}

.container1 {
    display: flex;
    max-width: 960px;
    padding-right: 10px;
    padding-left: 10px;
    margin-right: auto;
    margin-left: auto;
}

.sidebar1 {
    flex-basis: 250px;
    margin-right: 24px;
}

.content1 {
    flex-grow: 1;
}

.sidebar1,
.content1 {
    height: 350px;
    padding: 20px;
    border-radius: 4px;
    background-color: #fff;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
}

.card-set {
    display: flex;
    /* Make a flex container multiline */
    flex-wrap: wrap;
    /* Set gap between rows and columns */
    gap: 10px;
    padding: 0;
    list-style: none;
}

.item1 {
    /*  Set the width of the elements  */
    flex-basis: calc((100% - 20px) / 3);

    padding: 10px;
    background-color: #fff;
    border-radius: 4px;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
}

.item1 h2 {
    margin-top: 0;
    font-size: 20px;
}

.item1 p {
    margin: 0;
}

.page-header {
    /*  Making header.page-header a Flex-container and aligning elements  */
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px;
    background-color: #607d8b;
    border-radius: 4px;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    margin-bottom: 20px;
}

.logo {
    padding: 15px;
    border-radius: 4px;
    background-color: #ff5722;
    text-decoration: none;
    color: #fff;
}

.page-header .menu {
    margin: 0;
}

.menu {
    padding: 15px;
    margin: 0;
    margin-bottom: 20px;
    list-style: none;
    border-radius: 4px;
    background-color: #2196f3;
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    /*  Making ul.menu a Flex container  */
    display: flex;
}

.menu.reversed {
    /*  We rotate the main axis from right to left  */
    flex-direction: row-reverse;
    margin-top: 20px;
}

.menu>.item:not(:last-child) {
    margin-right: 10px;
}

.menu.reversed>.item:not(:last-child) {
    margin-right: 0;
    margin-left: 10px;
}

.menu .link {
    display: block;
    padding: 10px;
    border-radius: 4px;
    text-decoration: none;
    color: black;
    background-color: #fff;
}

.menu.flex-end {
    justify-content: flex-end;
}

.menu.center {
    margin-top: 20px;
    justify-content: center;
}

.menu .link:hover {
    text-decoration: underline;
}